---
export interface Props {
  title: string;
  body?: string;
  href?: string;
  list?: boolean;
}

const { href, title, body, list } = Astro.props;

const Wrapper = list ? "li" : "div";
---

<Wrapper class:list={["card"].concat(href ? ["is-link"] : [])}>
  {
    href ? (
      <a href={href}>
        <h2>
          {title}
          <span>&rarr;</span>
        </h2>
        <p>{body}</p>
      </a>
    ) : (
      <span>
        <h2>{title}</h2>
        <p>{body}</p>
      </span>
    )
  }
</Wrapper>
<style>
  .card {
    list-style: none;
    display: flex;
    padding: 0.15rem;
    background-color: white;
    background-image: var(--accent-gradient);
    background-size: 400%;
    border-radius: 0.5rem;
    background-position: 100%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: 0 2px 6px -1px rgba(0, 0, 0, 0.2),
      0 1px 4px -2px rgba(0, 0, 0, 0.15);
  }

  :where(.card > a, .card > span) {
    width: 100%;
    text-decoration: none;
    line-height: 1.4;
    padding: 1rem 1.3rem;
    border-radius: 0.35rem;
    color: #111;
    background-color: white;
    opacity: 0.8;
  }
  h2 {
    margin: 0;
    font-size: 1.25rem;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
    color: #444;
  }
  .card.is-link:is(:hover, :focus-within) {
    background-position: 0;
  }
  .card.is-link:is(:hover, :focus-within) h2 {
    color: rgb(var(--accent));
  }
</style>
